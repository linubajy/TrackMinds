pipeline{
  agent any;
  tools
  {
    maven 'maven'
    jdk 'JDK'
  }
       
  stages {
    
          
          stage('Fetch')
          {
            steps 
            {
               
               git branch: 'master', url: 'https://github.com/linubajy/TrackMinds.git'
            }
          }
        /*
          stage("Test")
          { 
            steps
            {
              bat 'mvn clean'
              bat 'mvn test'
            } 
          }
          stage("Build")
          {
             steps
            {
               bat 'mvn package'
            } 
              
          } 
        */
        stage('Sonar Analysis')
        {
          agent any
          steps
          {
             withSonarQubeEnv('sonarCloudID')
            {
                 echo 'Using sonarCloud'
                 bat 'mvn clean package sonar:sonar'
            }
          }
        }
        
    /*
         stage("Quality Gate") {
            steps {
              
              timeout(time: 1, unit: 'HOURS') {
                script{
                        def qg = waitForQualityGate() 
                        if (qg.status != 'OK')
                        {
                            error "Pipeline aborted due to gate failure : ${qg.status}"
                            waitForQualityGate abortPipeline: true
                         }
                    }
              }
            }
          }
         */ 
              
           
     
    }
  
    post {  
     
     success {
          echo ' SonarQube Analysis complete'
     }
           
              
    
      
         
    failure {  
             echo 'Mail being sent'
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'blinu.1997@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "blinu.1997@gmail.com";  
         }  
          
     }  
  
  
}
